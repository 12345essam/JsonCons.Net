### YamlMime:ManagedReference
items:
- uid: JsonCons.JsonPathLib.JsonValueEqualityComparer
  commentId: T:JsonCons.JsonPathLib.JsonValueEqualityComparer
  id: JsonValueEqualityComparer
  parent: JsonCons.JsonPathLib
  children:
  - JsonCons.JsonPathLib.JsonValueEqualityComparer.Equals(JsonCons.JsonPathLib.IOperand,JsonCons.JsonPathLib.IOperand)
  - JsonCons.JsonPathLib.JsonValueEqualityComparer.GetHashCode(JsonCons.JsonPathLib.IOperand)
  - JsonCons.JsonPathLib.JsonValueEqualityComparer.Instance
  langs:
  - csharp
  - vb
  name: JsonValueEqualityComparer
  nameWithType: JsonValueEqualityComparer
  fullName: JsonCons.JsonPathLib.JsonValueEqualityComparer
  type: Class
  source:
    remote:
      path: src/JsonPath/JsonValueEqualityComparer.cs
      branch: main
      repo: https://github.com/danielaparker/JsonCons.Net.git
    id: JsonValueEqualityComparer
    path: ../src/JsonPath/JsonValueEqualityComparer.cs
    startLine: 9
  assemblies:
  - JsonPath
  namespace: JsonCons.JsonPathLib
  syntax:
    content: 'public sealed class JsonValueEqualityComparer : IEqualityComparer<IOperand>'
    content.vb: >-
      Public NotInheritable Class JsonValueEqualityComparer
          Implements IEqualityComparer(Of IOperand)
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEqualityComparer{JsonCons.JsonPathLib.IOperand}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: JsonCons.JsonPathLib.JsonValueEqualityComparer.Instance
  commentId: P:JsonCons.JsonPathLib.JsonValueEqualityComparer.Instance
  id: Instance
  parent: JsonCons.JsonPathLib.JsonValueEqualityComparer
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: JsonValueEqualityComparer.Instance
  fullName: JsonCons.JsonPathLib.JsonValueEqualityComparer.Instance
  type: Property
  source:
    remote:
      path: src/JsonPath/JsonValueEqualityComparer.cs
      branch: main
      repo: https://github.com/danielaparker/JsonCons.Net.git
    id: Instance
    path: ../src/JsonPath/JsonValueEqualityComparer.cs
    startLine: 11
  assemblies:
  - JsonPath
  namespace: JsonCons.JsonPathLib
  syntax:
    content: public static JsonValueEqualityComparer Instance { get; }
    parameters: []
    return:
      type: JsonCons.JsonPathLib.JsonValueEqualityComparer
    content.vb: Public Shared ReadOnly Property Instance As JsonValueEqualityComparer
  overload: JsonCons.JsonPathLib.JsonValueEqualityComparer.Instance*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: JsonCons.JsonPathLib.JsonValueEqualityComparer.Equals(JsonCons.JsonPathLib.IOperand,JsonCons.JsonPathLib.IOperand)
  commentId: M:JsonCons.JsonPathLib.JsonValueEqualityComparer.Equals(JsonCons.JsonPathLib.IOperand,JsonCons.JsonPathLib.IOperand)
  id: Equals(JsonCons.JsonPathLib.IOperand,JsonCons.JsonPathLib.IOperand)
  parent: JsonCons.JsonPathLib.JsonValueEqualityComparer
  langs:
  - csharp
  - vb
  name: Equals(IOperand, IOperand)
  nameWithType: JsonValueEqualityComparer.Equals(IOperand, IOperand)
  fullName: JsonCons.JsonPathLib.JsonValueEqualityComparer.Equals(JsonCons.JsonPathLib.IOperand, JsonCons.JsonPathLib.IOperand)
  type: Method
  source:
    remote:
      path: src/JsonPath/JsonValueEqualityComparer.cs
      branch: main
      repo: https://github.com/danielaparker/JsonCons.Net.git
    id: Equals
    path: ../src/JsonPath/JsonValueEqualityComparer.cs
    startLine: 17
  assemblies:
  - JsonPath
  namespace: JsonCons.JsonPathLib
  syntax:
    content: public bool Equals(IOperand lhs, IOperand rhs)
    parameters:
    - id: lhs
      type: JsonCons.JsonPathLib.IOperand
    - id: rhs
      type: JsonCons.JsonPathLib.IOperand
    return:
      type: System.Boolean
    content.vb: Public Function Equals(lhs As IOperand, rhs As IOperand) As Boolean
  overload: JsonCons.JsonPathLib.JsonValueEqualityComparer.Equals*
  implements:
  - System.Collections.Generic.IEqualityComparer{JsonCons.JsonPathLib.IOperand}.Equals(JsonCons.JsonPathLib.IOperand,JsonCons.JsonPathLib.IOperand)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: JsonCons.JsonPathLib.JsonValueEqualityComparer.GetHashCode(JsonCons.JsonPathLib.IOperand)
  commentId: M:JsonCons.JsonPathLib.JsonValueEqualityComparer.GetHashCode(JsonCons.JsonPathLib.IOperand)
  id: GetHashCode(JsonCons.JsonPathLib.IOperand)
  parent: JsonCons.JsonPathLib.JsonValueEqualityComparer
  langs:
  - csharp
  - vb
  name: GetHashCode(IOperand)
  nameWithType: JsonValueEqualityComparer.GetHashCode(IOperand)
  fullName: JsonCons.JsonPathLib.JsonValueEqualityComparer.GetHashCode(JsonCons.JsonPathLib.IOperand)
  type: Method
  source:
    remote:
      path: src/JsonPath/JsonValueEqualityComparer.cs
      branch: main
      repo: https://github.com/danielaparker/JsonCons.Net.git
    id: GetHashCode
    path: ../src/JsonPath/JsonValueEqualityComparer.cs
    startLine: 86
  assemblies:
  - JsonPath
  namespace: JsonCons.JsonPathLib
  syntax:
    content: public int GetHashCode(IOperand obj)
    parameters:
    - id: obj
      type: JsonCons.JsonPathLib.IOperand
    return:
      type: System.Int32
    content.vb: Public Function GetHashCode(obj As IOperand) As Integer
  overload: JsonCons.JsonPathLib.JsonValueEqualityComparer.GetHashCode*
  implements:
  - System.Collections.Generic.IEqualityComparer{JsonCons.JsonPathLib.IOperand}.GetHashCode(JsonCons.JsonPathLib.IOperand)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: JsonCons.JsonPathLib
  commentId: N:JsonCons.JsonPathLib
  name: JsonCons.JsonPathLib
  nameWithType: JsonCons.JsonPathLib
  fullName: JsonCons.JsonPathLib
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IEqualityComparer{JsonCons.JsonPathLib.IOperand}
  commentId: T:System.Collections.Generic.IEqualityComparer{JsonCons.JsonPathLib.IOperand}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEqualityComparer`1
  name: IEqualityComparer<IOperand>
  nameWithType: IEqualityComparer<IOperand>
  fullName: System.Collections.Generic.IEqualityComparer<JsonCons.JsonPathLib.IOperand>
  nameWithType.vb: IEqualityComparer(Of IOperand)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of JsonCons.JsonPathLib.IOperand)
  name.vb: IEqualityComparer(Of IOperand)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: JsonCons.JsonPathLib.IOperand
    name: IOperand
    nameWithType: IOperand
    fullName: JsonCons.JsonPathLib.IOperand
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: JsonCons.JsonPathLib.IOperand
    name: IOperand
    nameWithType: IOperand
    fullName: JsonCons.JsonPathLib.IOperand
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEqualityComparer`1
  commentId: T:System.Collections.Generic.IEqualityComparer`1
  isExternal: true
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
  nameWithType.vb: IEqualityComparer(Of T)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T)
  name.vb: IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: JsonCons.JsonPathLib.JsonValueEqualityComparer.Instance*
  commentId: Overload:JsonCons.JsonPathLib.JsonValueEqualityComparer.Instance
  name: Instance
  nameWithType: JsonValueEqualityComparer.Instance
  fullName: JsonCons.JsonPathLib.JsonValueEqualityComparer.Instance
- uid: JsonCons.JsonPathLib.JsonValueEqualityComparer
  commentId: T:JsonCons.JsonPathLib.JsonValueEqualityComparer
  parent: JsonCons.JsonPathLib
  name: JsonValueEqualityComparer
  nameWithType: JsonValueEqualityComparer
  fullName: JsonCons.JsonPathLib.JsonValueEqualityComparer
- uid: JsonCons.JsonPathLib.JsonValueEqualityComparer.Equals*
  commentId: Overload:JsonCons.JsonPathLib.JsonValueEqualityComparer.Equals
  name: Equals
  nameWithType: JsonValueEqualityComparer.Equals
  fullName: JsonCons.JsonPathLib.JsonValueEqualityComparer.Equals
- uid: System.Collections.Generic.IEqualityComparer{JsonCons.JsonPathLib.IOperand}.Equals(JsonCons.JsonPathLib.IOperand,JsonCons.JsonPathLib.IOperand)
  commentId: M:System.Collections.Generic.IEqualityComparer{JsonCons.JsonPathLib.IOperand}.Equals(JsonCons.JsonPathLib.IOperand,JsonCons.JsonPathLib.IOperand)
  parent: System.Collections.Generic.IEqualityComparer{JsonCons.JsonPathLib.IOperand}
  definition: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
  name: Equals(IOperand, IOperand)
  nameWithType: IEqualityComparer<IOperand>.Equals(IOperand, IOperand)
  fullName: System.Collections.Generic.IEqualityComparer<JsonCons.JsonPathLib.IOperand>.Equals(JsonCons.JsonPathLib.IOperand, JsonCons.JsonPathLib.IOperand)
  nameWithType.vb: IEqualityComparer(Of IOperand).Equals(IOperand, IOperand)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of JsonCons.JsonPathLib.IOperand).Equals(JsonCons.JsonPathLib.IOperand, JsonCons.JsonPathLib.IOperand)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
    name: Equals
    nameWithType: IEqualityComparer<IOperand>.Equals
    fullName: System.Collections.Generic.IEqualityComparer<JsonCons.JsonPathLib.IOperand>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: JsonCons.JsonPathLib.IOperand
    name: IOperand
    nameWithType: IOperand
    fullName: JsonCons.JsonPathLib.IOperand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: JsonCons.JsonPathLib.IOperand
    name: IOperand
    nameWithType: IOperand
    fullName: JsonCons.JsonPathLib.IOperand
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
    name: Equals
    nameWithType: IEqualityComparer(Of IOperand).Equals
    fullName: System.Collections.Generic.IEqualityComparer(Of JsonCons.JsonPathLib.IOperand).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: JsonCons.JsonPathLib.IOperand
    name: IOperand
    nameWithType: IOperand
    fullName: JsonCons.JsonPathLib.IOperand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: JsonCons.JsonPathLib.IOperand
    name: IOperand
    nameWithType: IOperand
    fullName: JsonCons.JsonPathLib.IOperand
  - name: )
    nameWithType: )
    fullName: )
- uid: JsonCons.JsonPathLib.IOperand
  commentId: T:JsonCons.JsonPathLib.IOperand
  parent: JsonCons.JsonPathLib
  name: IOperand
  nameWithType: IOperand
  fullName: JsonCons.JsonPathLib.IOperand
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
  commentId: M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
  isExternal: true
  name: Equals(T, T)
  nameWithType: IEqualityComparer<T>.Equals(T, T)
  fullName: System.Collections.Generic.IEqualityComparer<T>.Equals(T, T)
  nameWithType.vb: IEqualityComparer(Of T).Equals(T, T)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T).Equals(T, T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
    name: Equals
    nameWithType: IEqualityComparer<T>.Equals
    fullName: System.Collections.Generic.IEqualityComparer<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
    name: Equals
    nameWithType: IEqualityComparer(Of T).Equals
    fullName: System.Collections.Generic.IEqualityComparer(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: JsonCons.JsonPathLib.JsonValueEqualityComparer.GetHashCode*
  commentId: Overload:JsonCons.JsonPathLib.JsonValueEqualityComparer.GetHashCode
  name: GetHashCode
  nameWithType: JsonValueEqualityComparer.GetHashCode
  fullName: JsonCons.JsonPathLib.JsonValueEqualityComparer.GetHashCode
- uid: System.Collections.Generic.IEqualityComparer{JsonCons.JsonPathLib.IOperand}.GetHashCode(JsonCons.JsonPathLib.IOperand)
  commentId: M:System.Collections.Generic.IEqualityComparer{JsonCons.JsonPathLib.IOperand}.GetHashCode(JsonCons.JsonPathLib.IOperand)
  parent: System.Collections.Generic.IEqualityComparer{JsonCons.JsonPathLib.IOperand}
  definition: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
  name: GetHashCode(IOperand)
  nameWithType: IEqualityComparer<IOperand>.GetHashCode(IOperand)
  fullName: System.Collections.Generic.IEqualityComparer<JsonCons.JsonPathLib.IOperand>.GetHashCode(JsonCons.JsonPathLib.IOperand)
  nameWithType.vb: IEqualityComparer(Of IOperand).GetHashCode(IOperand)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of JsonCons.JsonPathLib.IOperand).GetHashCode(JsonCons.JsonPathLib.IOperand)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    nameWithType: IEqualityComparer<IOperand>.GetHashCode
    fullName: System.Collections.Generic.IEqualityComparer<JsonCons.JsonPathLib.IOperand>.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: JsonCons.JsonPathLib.IOperand
    name: IOperand
    nameWithType: IOperand
    fullName: JsonCons.JsonPathLib.IOperand
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    nameWithType: IEqualityComparer(Of IOperand).GetHashCode
    fullName: System.Collections.Generic.IEqualityComparer(Of JsonCons.JsonPathLib.IOperand).GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: JsonCons.JsonPathLib.IOperand
    name: IOperand
    nameWithType: IOperand
    fullName: JsonCons.JsonPathLib.IOperand
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
  commentId: M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
  isExternal: true
  name: GetHashCode(T)
  nameWithType: IEqualityComparer<T>.GetHashCode(T)
  fullName: System.Collections.Generic.IEqualityComparer<T>.GetHashCode(T)
  nameWithType.vb: IEqualityComparer(Of T).GetHashCode(T)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T).GetHashCode(T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    nameWithType: IEqualityComparer<T>.GetHashCode
    fullName: System.Collections.Generic.IEqualityComparer<T>.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    nameWithType: IEqualityComparer(Of T).GetHashCode
    fullName: System.Collections.Generic.IEqualityComparer(Of T).GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
