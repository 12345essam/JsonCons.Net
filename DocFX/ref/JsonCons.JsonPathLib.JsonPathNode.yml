### YamlMime:ManagedReference
items:
- uid: JsonCons.JsonPathLib.JsonPathNode
  commentId: T:JsonCons.JsonPathLib.JsonPathNode
  id: JsonPathNode
  parent: JsonCons.JsonPathLib
  children:
  - JsonCons.JsonPathLib.JsonPathNode.CompareTo(JsonCons.JsonPathLib.JsonPathNode)
  - JsonCons.JsonPathLib.JsonPathNode.Equals(JsonCons.JsonPathLib.JsonPathNode)
  - JsonCons.JsonPathLib.JsonPathNode.GetHashCode
  - JsonCons.JsonPathLib.JsonPathNode.Path
  - JsonCons.JsonPathLib.JsonPathNode.Value
  langs:
  - csharp
  - vb
  name: JsonPathNode
  nameWithType: JsonPathNode
  fullName: JsonCons.JsonPathLib.JsonPathNode
  type: Struct
  source:
    remote:
      path: src/JsonPath/JsonPathNode.cs
      branch: develop
      repo: https://github.com/danielaparker/JsonCons.Net.git
    id: JsonPathNode
    path: ../src/JsonPath/JsonPathNode.cs
    startLine: 9
  assemblies:
  - JsonPath
  namespace: JsonCons.JsonPathLib
  syntax:
    content: 'public readonly struct JsonPathNode : IEquatable<JsonPathNode>, IComparable<JsonPathNode>'
    content.vb: >-
      Public Structure JsonPathNode

          Implements IEquatable(Of JsonPathNode), IComparable(Of JsonPathNode)
  implements:
  - System.IEquatable{JsonCons.JsonPathLib.JsonPathNode}
  - System.IComparable{JsonCons.JsonPathLib.JsonPathNode}
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - readonly
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: JsonCons.JsonPathLib.JsonPathNode.Path
  commentId: P:JsonCons.JsonPathLib.JsonPathNode.Path
  id: Path
  parent: JsonCons.JsonPathLib.JsonPathNode
  langs:
  - csharp
  - vb
  name: Path
  nameWithType: JsonPathNode.Path
  fullName: JsonCons.JsonPathLib.JsonPathNode.Path
  type: Property
  source:
    remote:
      path: src/JsonPath/JsonPathNode.cs
      branch: develop
      repo: https://github.com/danielaparker/JsonCons.Net.git
    id: Path
    path: ../src/JsonPath/JsonPathNode.cs
    startLine: 11
  assemblies:
  - JsonPath
  namespace: JsonCons.JsonPathLib
  syntax:
    content: public readonly NormalizedPath Path { get; }
    parameters: []
    return:
      type: JsonCons.JsonPathLib.NormalizedPath
    content.vb: Public ReadOnly Property Path As NormalizedPath
  overload: JsonCons.JsonPathLib.JsonPathNode.Path*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: JsonCons.JsonPathLib.JsonPathNode.Value
  commentId: P:JsonCons.JsonPathLib.JsonPathNode.Value
  id: Value
  parent: JsonCons.JsonPathLib.JsonPathNode
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: JsonPathNode.Value
  fullName: JsonCons.JsonPathLib.JsonPathNode.Value
  type: Property
  source:
    remote:
      path: src/JsonPath/JsonPathNode.cs
      branch: develop
      repo: https://github.com/danielaparker/JsonCons.Net.git
    id: Value
    path: ../src/JsonPath/JsonPathNode.cs
    startLine: 12
  assemblies:
  - JsonPath
  namespace: JsonCons.JsonPathLib
  syntax:
    content: public readonly JsonElement Value { get; }
    parameters: []
    return:
      type: System.Text.Json.JsonElement
    content.vb: Public ReadOnly Property Value As JsonElement
  overload: JsonCons.JsonPathLib.JsonPathNode.Value*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: JsonCons.JsonPathLib.JsonPathNode.Equals(JsonCons.JsonPathLib.JsonPathNode)
  commentId: M:JsonCons.JsonPathLib.JsonPathNode.Equals(JsonCons.JsonPathLib.JsonPathNode)
  id: Equals(JsonCons.JsonPathLib.JsonPathNode)
  parent: JsonCons.JsonPathLib.JsonPathNode
  langs:
  - csharp
  - vb
  name: Equals(JsonPathNode)
  nameWithType: JsonPathNode.Equals(JsonPathNode)
  fullName: JsonCons.JsonPathLib.JsonPathNode.Equals(JsonCons.JsonPathLib.JsonPathNode)
  type: Method
  source:
    remote:
      path: src/JsonPath/JsonPathNode.cs
      branch: develop
      repo: https://github.com/danielaparker/JsonCons.Net.git
    id: Equals
    path: ../src/JsonPath/JsonPathNode.cs
    startLine: 20
  assemblies:
  - JsonPath
  namespace: JsonCons.JsonPathLib
  syntax:
    content: public readonly bool Equals(JsonPathNode other)
    parameters:
    - id: other
      type: JsonCons.JsonPathLib.JsonPathNode
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As JsonPathNode) As Boolean
  overload: JsonCons.JsonPathLib.JsonPathNode.Equals*
  implements:
  - System.IEquatable{JsonCons.JsonPathLib.JsonPathNode}.Equals(JsonCons.JsonPathLib.JsonPathNode)
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: JsonCons.JsonPathLib.JsonPathNode.CompareTo(JsonCons.JsonPathLib.JsonPathNode)
  commentId: M:JsonCons.JsonPathLib.JsonPathNode.CompareTo(JsonCons.JsonPathLib.JsonPathNode)
  id: CompareTo(JsonCons.JsonPathLib.JsonPathNode)
  parent: JsonCons.JsonPathLib.JsonPathNode
  langs:
  - csharp
  - vb
  name: CompareTo(JsonPathNode)
  nameWithType: JsonPathNode.CompareTo(JsonPathNode)
  fullName: JsonCons.JsonPathLib.JsonPathNode.CompareTo(JsonCons.JsonPathLib.JsonPathNode)
  type: Method
  source:
    remote:
      path: src/JsonPath/JsonPathNode.cs
      branch: develop
      repo: https://github.com/danielaparker/JsonCons.Net.git
    id: CompareTo
    path: ../src/JsonPath/JsonPathNode.cs
    startLine: 25
  assemblies:
  - JsonPath
  namespace: JsonCons.JsonPathLib
  syntax:
    content: public readonly int CompareTo(JsonPathNode other)
    parameters:
    - id: other
      type: JsonCons.JsonPathLib.JsonPathNode
    return:
      type: System.Int32
    content.vb: Public Function CompareTo(other As JsonPathNode) As Integer
  overload: JsonCons.JsonPathLib.JsonPathNode.CompareTo*
  implements:
  - System.IComparable{JsonCons.JsonPathLib.JsonPathNode}.CompareTo(JsonCons.JsonPathLib.JsonPathNode)
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: JsonCons.JsonPathLib.JsonPathNode.GetHashCode
  commentId: M:JsonCons.JsonPathLib.JsonPathNode.GetHashCode
  id: GetHashCode
  parent: JsonCons.JsonPathLib.JsonPathNode
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: JsonPathNode.GetHashCode()
  fullName: JsonCons.JsonPathLib.JsonPathNode.GetHashCode()
  type: Method
  source:
    remote:
      path: src/JsonPath/JsonPathNode.cs
      branch: develop
      repo: https://github.com/danielaparker/JsonCons.Net.git
    id: GetHashCode
    path: ../src/JsonPath/JsonPathNode.cs
    startLine: 30
  assemblies:
  - JsonPath
  namespace: JsonCons.JsonPathLib
  syntax:
    content: public override readonly int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: JsonCons.JsonPathLib.JsonPathNode.GetHashCode*
  modifiers.csharp:
  - public
  - override
  - readonly
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: JsonCons.JsonPathLib
  commentId: N:JsonCons.JsonPathLib
  name: JsonCons.JsonPathLib
  nameWithType: JsonCons.JsonPathLib
  fullName: JsonCons.JsonPathLib
- uid: System.IEquatable{JsonCons.JsonPathLib.JsonPathNode}
  commentId: T:System.IEquatable{JsonCons.JsonPathLib.JsonPathNode}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<JsonPathNode>
  nameWithType: IEquatable<JsonPathNode>
  fullName: System.IEquatable<JsonCons.JsonPathLib.JsonPathNode>
  nameWithType.vb: IEquatable(Of JsonPathNode)
  fullName.vb: System.IEquatable(Of JsonCons.JsonPathLib.JsonPathNode)
  name.vb: IEquatable(Of JsonPathNode)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: JsonCons.JsonPathLib.JsonPathNode
    name: JsonPathNode
    nameWithType: JsonPathNode
    fullName: JsonCons.JsonPathLib.JsonPathNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: JsonCons.JsonPathLib.JsonPathNode
    name: JsonPathNode
    nameWithType: JsonPathNode
    fullName: JsonCons.JsonPathLib.JsonPathNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{JsonCons.JsonPathLib.JsonPathNode}
  commentId: T:System.IComparable{JsonCons.JsonPathLib.JsonPathNode}
  parent: System
  definition: System.IComparable`1
  name: IComparable<JsonPathNode>
  nameWithType: IComparable<JsonPathNode>
  fullName: System.IComparable<JsonCons.JsonPathLib.JsonPathNode>
  nameWithType.vb: IComparable(Of JsonPathNode)
  fullName.vb: System.IComparable(Of JsonCons.JsonPathLib.JsonPathNode)
  name.vb: IComparable(Of JsonPathNode)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: JsonCons.JsonPathLib.JsonPathNode
    name: JsonPathNode
    nameWithType: JsonPathNode
    fullName: JsonCons.JsonPathLib.JsonPathNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: JsonCons.JsonPathLib.JsonPathNode
    name: JsonPathNode
    nameWithType: JsonPathNode
    fullName: JsonCons.JsonPathLib.JsonPathNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullName.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: JsonCons.JsonPathLib.JsonPathNode.Path*
  commentId: Overload:JsonCons.JsonPathLib.JsonPathNode.Path
  name: Path
  nameWithType: JsonPathNode.Path
  fullName: JsonCons.JsonPathLib.JsonPathNode.Path
- uid: JsonCons.JsonPathLib.NormalizedPath
  commentId: T:JsonCons.JsonPathLib.NormalizedPath
  parent: JsonCons.JsonPathLib
  name: NormalizedPath
  nameWithType: NormalizedPath
  fullName: JsonCons.JsonPathLib.NormalizedPath
- uid: JsonCons.JsonPathLib.JsonPathNode.Value*
  commentId: Overload:JsonCons.JsonPathLib.JsonPathNode.Value
  name: Value
  nameWithType: JsonPathNode.Value
  fullName: JsonCons.JsonPathLib.JsonPathNode.Value
- uid: System.Text.Json.JsonElement
  commentId: T:System.Text.Json.JsonElement
  parent: System.Text.Json
  isExternal: true
  name: JsonElement
  nameWithType: JsonElement
  fullName: System.Text.Json.JsonElement
- uid: System.Text.Json
  commentId: N:System.Text.Json
  isExternal: true
  name: System.Text.Json
  nameWithType: System.Text.Json
  fullName: System.Text.Json
- uid: JsonCons.JsonPathLib.JsonPathNode.Equals*
  commentId: Overload:JsonCons.JsonPathLib.JsonPathNode.Equals
  name: Equals
  nameWithType: JsonPathNode.Equals
  fullName: JsonCons.JsonPathLib.JsonPathNode.Equals
- uid: System.IEquatable{JsonCons.JsonPathLib.JsonPathNode}.Equals(JsonCons.JsonPathLib.JsonPathNode)
  commentId: M:System.IEquatable{JsonCons.JsonPathLib.JsonPathNode}.Equals(JsonCons.JsonPathLib.JsonPathNode)
  parent: System.IEquatable{JsonCons.JsonPathLib.JsonPathNode}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(JsonPathNode)
  nameWithType: IEquatable<JsonPathNode>.Equals(JsonPathNode)
  fullName: System.IEquatable<JsonCons.JsonPathLib.JsonPathNode>.Equals(JsonCons.JsonPathLib.JsonPathNode)
  nameWithType.vb: IEquatable(Of JsonPathNode).Equals(JsonPathNode)
  fullName.vb: System.IEquatable(Of JsonCons.JsonPathLib.JsonPathNode).Equals(JsonCons.JsonPathLib.JsonPathNode)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<JsonPathNode>.Equals
    fullName: System.IEquatable<JsonCons.JsonPathLib.JsonPathNode>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: JsonCons.JsonPathLib.JsonPathNode
    name: JsonPathNode
    nameWithType: JsonPathNode
    fullName: JsonCons.JsonPathLib.JsonPathNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of JsonPathNode).Equals
    fullName: System.IEquatable(Of JsonCons.JsonPathLib.JsonPathNode).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: JsonCons.JsonPathLib.JsonPathNode
    name: JsonPathNode
    nameWithType: JsonPathNode
    fullName: JsonCons.JsonPathLib.JsonPathNode
  - name: )
    nameWithType: )
    fullName: )
- uid: JsonCons.JsonPathLib.JsonPathNode
  commentId: T:JsonCons.JsonPathLib.JsonPathNode
  parent: JsonCons.JsonPathLib
  name: JsonPathNode
  nameWithType: JsonPathNode
  fullName: JsonCons.JsonPathLib.JsonPathNode
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: JsonCons.JsonPathLib.JsonPathNode.CompareTo*
  commentId: Overload:JsonCons.JsonPathLib.JsonPathNode.CompareTo
  name: CompareTo
  nameWithType: JsonPathNode.CompareTo
  fullName: JsonCons.JsonPathLib.JsonPathNode.CompareTo
- uid: System.IComparable{JsonCons.JsonPathLib.JsonPathNode}.CompareTo(JsonCons.JsonPathLib.JsonPathNode)
  commentId: M:System.IComparable{JsonCons.JsonPathLib.JsonPathNode}.CompareTo(JsonCons.JsonPathLib.JsonPathNode)
  parent: System.IComparable{JsonCons.JsonPathLib.JsonPathNode}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(JsonPathNode)
  nameWithType: IComparable<JsonPathNode>.CompareTo(JsonPathNode)
  fullName: System.IComparable<JsonCons.JsonPathLib.JsonPathNode>.CompareTo(JsonCons.JsonPathLib.JsonPathNode)
  nameWithType.vb: IComparable(Of JsonPathNode).CompareTo(JsonPathNode)
  fullName.vb: System.IComparable(Of JsonCons.JsonPathLib.JsonPathNode).CompareTo(JsonCons.JsonPathLib.JsonPathNode)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<JsonPathNode>.CompareTo
    fullName: System.IComparable<JsonCons.JsonPathLib.JsonPathNode>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: JsonCons.JsonPathLib.JsonPathNode
    name: JsonPathNode
    nameWithType: JsonPathNode
    fullName: JsonCons.JsonPathLib.JsonPathNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of JsonPathNode).CompareTo
    fullName: System.IComparable(Of JsonCons.JsonPathLib.JsonPathNode).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: JsonCons.JsonPathLib.JsonPathNode
    name: JsonPathNode
    nameWithType: JsonPathNode
    fullName: JsonCons.JsonPathLib.JsonPathNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IComparable`1.CompareTo(`0)
  commentId: M:System.IComparable`1.CompareTo(`0)
  isExternal: true
  name: CompareTo(T)
  nameWithType: IComparable<T>.CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  fullName.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<T>.CompareTo
    fullName: System.IComparable<T>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of T).CompareTo
    fullName: System.IComparable(Of T).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: JsonCons.JsonPathLib.JsonPathNode.GetHashCode*
  commentId: Overload:JsonCons.JsonPathLib.JsonPathNode.GetHashCode
  name: GetHashCode
  nameWithType: JsonPathNode.GetHashCode
  fullName: JsonCons.JsonPathLib.JsonPathNode.GetHashCode
