### YamlMime:ManagedReference
items:
- uid: JsonCons.JsonPathLib.NameValuePair
  commentId: T:JsonCons.JsonPathLib.NameValuePair
  id: NameValuePair
  parent: JsonCons.JsonPathLib
  children:
  - JsonCons.JsonPathLib.NameValuePair.#ctor(System.String,JsonCons.JsonPathLib.IOperand)
  - JsonCons.JsonPathLib.NameValuePair.Name
  - JsonCons.JsonPathLib.NameValuePair.Value
  langs:
  - csharp
  - vb
  name: NameValuePair
  nameWithType: NameValuePair
  fullName: JsonCons.JsonPathLib.NameValuePair
  type: Struct
  source:
    remote:
      path: src/JsonPath/Operand.cs
      branch: main
      repo: https://github.com/danielaparker/JsonCons.Net.git
    id: NameValuePair
    path: ../src/JsonPath/Operand.cs
    startLine: 9
  assemblies:
  - JsonPath
  namespace: JsonCons.JsonPathLib
  syntax:
    content: public readonly struct NameValuePair
    content.vb: Public Structure NameValuePair
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - readonly
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: JsonCons.JsonPathLib.NameValuePair.Name
  commentId: P:JsonCons.JsonPathLib.NameValuePair.Name
  id: Name
  parent: JsonCons.JsonPathLib.NameValuePair
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: NameValuePair.Name
  fullName: JsonCons.JsonPathLib.NameValuePair.Name
  type: Property
  source:
    remote:
      path: src/JsonPath/Operand.cs
      branch: main
      repo: https://github.com/danielaparker/JsonCons.Net.git
    id: Name
    path: ../src/JsonPath/Operand.cs
    startLine: 11
  assemblies:
  - JsonPath
  namespace: JsonCons.JsonPathLib
  syntax:
    content: public readonly string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: JsonCons.JsonPathLib.NameValuePair.Name*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: JsonCons.JsonPathLib.NameValuePair.Value
  commentId: P:JsonCons.JsonPathLib.NameValuePair.Value
  id: Value
  parent: JsonCons.JsonPathLib.NameValuePair
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: NameValuePair.Value
  fullName: JsonCons.JsonPathLib.NameValuePair.Value
  type: Property
  source:
    remote:
      path: src/JsonPath/Operand.cs
      branch: main
      repo: https://github.com/danielaparker/JsonCons.Net.git
    id: Value
    path: ../src/JsonPath/Operand.cs
    startLine: 12
  assemblies:
  - JsonPath
  namespace: JsonCons.JsonPathLib
  syntax:
    content: public readonly IOperand Value { get; }
    parameters: []
    return:
      type: JsonCons.JsonPathLib.IOperand
    content.vb: Public ReadOnly Property Value As IOperand
  overload: JsonCons.JsonPathLib.NameValuePair.Value*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: JsonCons.JsonPathLib.NameValuePair.#ctor(System.String,JsonCons.JsonPathLib.IOperand)
  commentId: M:JsonCons.JsonPathLib.NameValuePair.#ctor(System.String,JsonCons.JsonPathLib.IOperand)
  id: '#ctor(System.String,JsonCons.JsonPathLib.IOperand)'
  parent: JsonCons.JsonPathLib.NameValuePair
  langs:
  - csharp
  - vb
  name: NameValuePair(String, IOperand)
  nameWithType: NameValuePair.NameValuePair(String, IOperand)
  fullName: JsonCons.JsonPathLib.NameValuePair.NameValuePair(System.String, JsonCons.JsonPathLib.IOperand)
  type: Constructor
  source:
    remote:
      path: src/JsonPath/Operand.cs
      branch: main
      repo: https://github.com/danielaparker/JsonCons.Net.git
    id: .ctor
    path: ../src/JsonPath/Operand.cs
    startLine: 14
  assemblies:
  - JsonPath
  namespace: JsonCons.JsonPathLib
  syntax:
    content: public NameValuePair(string name, IOperand value)
    parameters:
    - id: name
      type: System.String
    - id: value
      type: JsonCons.JsonPathLib.IOperand
    content.vb: Public Sub New(name As String, value As IOperand)
  overload: JsonCons.JsonPathLib.NameValuePair.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: JsonCons.JsonPathLib
  commentId: N:JsonCons.JsonPathLib
  name: JsonCons.JsonPathLib
  nameWithType: JsonCons.JsonPathLib
  fullName: JsonCons.JsonPathLib
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: JsonCons.JsonPathLib.NameValuePair.Name*
  commentId: Overload:JsonCons.JsonPathLib.NameValuePair.Name
  name: Name
  nameWithType: NameValuePair.Name
  fullName: JsonCons.JsonPathLib.NameValuePair.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: JsonCons.JsonPathLib.NameValuePair.Value*
  commentId: Overload:JsonCons.JsonPathLib.NameValuePair.Value
  name: Value
  nameWithType: NameValuePair.Value
  fullName: JsonCons.JsonPathLib.NameValuePair.Value
- uid: JsonCons.JsonPathLib.IOperand
  commentId: T:JsonCons.JsonPathLib.IOperand
  parent: JsonCons.JsonPathLib
  name: IOperand
  nameWithType: IOperand
  fullName: JsonCons.JsonPathLib.IOperand
- uid: JsonCons.JsonPathLib.NameValuePair.#ctor*
  commentId: Overload:JsonCons.JsonPathLib.NameValuePair.#ctor
  name: NameValuePair
  nameWithType: NameValuePair.NameValuePair
  fullName: JsonCons.JsonPathLib.NameValuePair.NameValuePair
